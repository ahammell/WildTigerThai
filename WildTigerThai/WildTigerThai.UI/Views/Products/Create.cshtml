@model WildTigerThai.DATA.EF.Product

@{
    ViewBag.Title = "Create";
}

<div class="desktop">
    <h2>Create Product</h2>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group">
                <span class="control-label col-md-2">Product Type</span>
                <div class="col-md-10">
                    @Html.DropDownList("ProductType_ID", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ProductType_ID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ProductName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Active, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.Active)
                        @Html.ValidationMessageFor(model => model.Active, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <span class="control-label col-md-2">Product Photo</span>
                <img class="col-md-10">
                @*@Html.DropDownList("ProductPhoto_ID", null, htmlAttributes: new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.ProductPhoto_ID, "", new { @class = "text-danger" })*@
                @{
                    var images = ViewBag.Photo_ID;
                    foreach (var image in images)
                    {
                        <img src="@image.Text"/>
                    }
                }
                @*@Ajax.ActionLink("Open popup", "ChoosePhoto", new { id = Model == null ? 0 : Model.Product_ID }, new AjaxOptions { HttpMethod = "GET", UpdateTargetId = "result", InsertionMode = InsertionMode.Replace, OnSuccess = "openPopup" })<br />*@

                <div id="result" style="display:none;"></div>
            
            </div>

            <div class="form-group">
                <div class="col-md-10">
                    <input type="submit" value="Create" class="btn btn-warning" />
                    @Html.ActionLink("Back to List", "Index", null, htmlAttributes: new { @class = "btn btn-warning btn2" })
                </div>
            </div>
        </div>
    }
</div>
<div class="mobile">
    <h2>Create Product</h2>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div>
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group">
                <span class="control-label col-md-2">Product Type</span>
                <div class="col-md-10">
                    @Html.DropDownList("ProductType_ID", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ProductType_ID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ProductName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Active, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.Active)
                        @Html.ValidationMessageFor(model => model.Active, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <span class="control-label col-md-2">Product Photo</span>
                <div class="col-md-10">
                    @*@Html.DropDownList("ProductPhoto_ID", null, htmlAttributes: new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.ProductPhoto_ID, "", new { @class = "text-danger" })*@
                    @Ajax.ActionLink("Open popup", "ChoosePhoto", new { id = Model == null ? 0 : Model.Product_ID }, new AjaxOptions { HttpMethod = "GET", UpdateTargetId = "result", InsertionMode = InsertionMode.Replace, OnSuccess = "openPopup" })<br />
                    <div id="result" style="display:none;"></div>
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-10">
                    <input type="submit" value="Create" class="btn btn-warning mobile-button" />
                    @Html.ActionLink("Back to List", "Index", null, htmlAttributes: new { @class = "btn btn-warning btn2" })
                </div>
            </div>
        </div>
    }
</div>

@section Scripts {

    <script type="text/javascript">
        $(document).ready(function () {
            $("#result").dialog({
                autoOpen: false,
                title: 'Title',
                width: 500,
                height: 'auto',
                modal: true
            });
        });
        function openPopup() {
            $("#result").dialog("open");
        }
    </script>

}